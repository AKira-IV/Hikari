name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

# Environment variables for test environment
# Updated to support RSA asymmetric JWT authentication
env:
  NODE_ENV: test
  DATABASE_HOST: localhost
  DATABASE_PORT: 5432
  DATABASE_USERNAME: hikari_user
  DATABASE_PASSWORD: hikari_password
  DATABASE_NAME: hikari_test
  # JWT Configuration - RSA Asymmetric for tests
  JWT_SECRET: test-secret-key-for-github-actions
  JWT_EXPIRATION: 24h
  JWT_ISSUER: hikari-test
  JWT_AUDIENCE: hikari-test-users
  # Test RSA keys for GitHub Actions (not for production)
  JWT_PRIVATE_KEY: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2Z0lCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktnd2dnU2tBZ0VBQW9JQkFRRHk4S255eFhEK0VwaE0KaEdVekg5RkdzbWYxNlJSK0NOVWxmM0tFQzI0NG4yUFoxaG9rbDR1Z3VDRWRKbnZmUy83VlFDSjNvdi9uRDdVSQpYN3R5NUNEcnhUdDV1YmZUajdWQ0JSekRIOWVla2ExeGI5RENTYkJSOFBDMVB6VUs2ZnVoVjY2MkJCa1lVTkZqCjlWK0pFdVNHUUh5NHREdzZkYUY3RXlLMWRyMXlKTjNLckJQZ2JnVzZVbjJHWnM2ODJ6UWp1VnpqbUJLaDVTcWwKUWRMMGVQaDYwUjZxRnd6U20ycU0rbnVUeTM4c0M2Y2l5ZFB2RTRSbC9yVVYzVkMwUjc1VHlMaTNDSDFMSDdkRAozKzUzWFE5UlE4S0tZTnV3cnZoOWNabXQ4ZmdGejJLMjdDbzZRSDFkMVFmcm51T0k0VU9SSTJZMkpQZGI2Y2ZoCm1aYmtQOVV6QWdNQkFBRUNnZ0VBYjFNQUZic0xPYW9zdHhlT1JqeWt5aWd6d25paHh0Vm1VdTRSZkZlK2xOeloKUlRlNnVCem53MmpNNTg0OFFrbFJSOGhCWXlCQzhzOThUZytNVnF3YU4rQWtEbllmdWljbTBNK0Y3Qlk1MkxSNQp6YnNHNXhrY1hwZ3h2V1J1K29iWkk0aUtDMmRhVm8ybVBnOXhUVjltYit5NkdtdWhFOHJXaWc3dFAwbGZxNTg3Cmp5eEFlODJ5UDhKVDFoeHFYYmU5MDUyOGptc3BmNWtneHZ6V2JRaXFUNWdBSGlOUGZXb0IwUkJtMWJDRG5MMG8KR3NuUlI5dEJlQWxGQzRRRi9vQThieWZkUU9nR1lVR2wvYkM2NHh4RG80L0dIU2RoZFFvNmtUa0V6amFzZ01uTQpTMWFWcVJLU2J4TTVlOUZPblpqaHA0eXJjcXhiK2xzSmpJUDhSRUF3a1FLQmdRRC8yOWtJTHdFdGkzZ2RueEQ0ClJnWjRTaGhDUjlVbFlzZ0o4eDZEL0ZPZWw4NVhiYWpyLzR3RUpyczk0YmM0RVpPckJZd2I3bGJMcGtoN2dCZ2EKSGh5dkpCcmtySWJ6VDFHTWhpR2UwV1NQbGdGQUJOZ1pRT3lRaitPMHArWk5QbnVjbkFwaE9MWERmd0NUUUF2dQpQYmg3c0gxb1BTbEdYbERBTjQxUnB1SGQ0d0tCZ1FEekV2MmVqeWEvZmhZbGszcVM0dEVqOERTaVMwSnlyUzMxCnplOVpUVTIvM3NuamxTeUQxRGd4QTgwa200ckNoR3A3eU15WmdFdTJEcFBPbXhvT2EyUVJFakROUzhNVnRXa20Kb2tFd2lBdG9mY0hUQTRNSTBaME1CTG9odE90UXNwRmJpRElIaXplYjUrMm5QOUNhVW50VlFERHhuUk10MUJBRgp5ZGJkK0JUTWNRS0JnQlhhMDVrTldzNW5JV1YyVnQ2K0xJTk40UENZYmk1NVY1angrV05ReEZ2Qm45QjcvM2ZaCkpqNmNpRlhxMTlta05yYmZERzYrVncraUxvTE9HRUR5M1lSZ1V5UEJVTzJya3Myc0QyY2ZmN1Y4SExNNU5yUkIKaFhON3R2bVJkZXlYTDd2YTRGQVpwZjBDOWl1ZHh1Y2N3b3RlTWZnYmNWRWZjVXBaOUdwTEZQUDlBb0dCQU5QYgpHWEc1RXV5VDJIbW5zSTJWWXZNUHlOQXJDQjhyRVlQTG1YRWNEMGZMeGVxMWViYnNvSTBYNHhTay9Ldk0vWUlsCjRTMW94SlJJNEVxU3BJTXMxbXFLa0Q1ZWFnbmhzMlFZeHZpbG1rdllUN2E2dU5wVzE2cEI5SGlzVnV4ZXRwSXcKZ21wUXpJYjEvZ3huY2trTzJxL1M0dFd6TWFRZjBGYzdOQ3NDcmg0QkFvR0JBSmdmUUxWalJjOC9tbit3SzFnVgpYeUYrK3ZLY3RMUmFSWFlidHdRWUJ0Y05aS01DcytHdHVwUlpDM2NiYnNBbHE3M0dBby9paUZxSUdtWDlBdEM0CnRwYi84VXd4clJrRVA2Q2lPeGIrSXBOWXRabUpnUXpWaGFWTlBvNVh4S1RxOVJ3UWoyYmEyWEtTY3ZOUm5vYkoKS25FWDJjekVGSzdEVTJVb2VwSUFNMU1UCi0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K
  JWT_PUBLIC_KEY: LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FROUE4dkNwOHNWdy9oS1lUSVJsTXgvUgpSckpuOWVrVWZnalZKWDl5aEF0dU9KOWoyZFlhSkplTG9MZ2hIU1o3MzB2KzFVQWlkNkwvNXcrMUNGKzdjdVFnCjY4VTdlYm0zMDQrMVFnVWN3eC9YbnBHdGNXL1F3a213VWZEd3RUODFDdW43b1ZldXRnUVpHRkRSWS9WZmlSTGsKaGtCOHVMUThPbldoZXhNaXRYYTljaVRkeXF3VDRHNEZ1bEo5aG1iT3ZOczBJN2xjNDVnU29lVXFwVUhTOUhqNApldEVlcWhjTTBwdHFqUHA3azh0L0xBdW5Jc25UN3hPRVpmNjFGZDFRdEVlK1U4aTR0d2g5U3grM1E5L3VkMTBQClVVUENpbURic0s3NGZYR1pyZkg0QmM5aXR1d3FPa0I5WGRVSDY1N2ppT0ZEa1NObU5pVDNXK25INFptVzVEL1YKTXdJREFRQUIKLS0tLS1FTkQgUFVCTElDIEtFWS0tLS0tCg==

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_USER: hikari_user
          POSTGRES_PASSWORD: hikari_password
          POSTGRES_DB: hikari_test
          POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256 --auth-local=scram-sha-256"
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U hikari_user -d hikari_test"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 10

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: |
          backend/package-lock.json
          frontend/package-lock.json

    - name: Install PostgreSQL client
      run: |
        sudo apt-get update
        sudo apt-get install -y postgresql-client

    - name: Install backend dependencies
      working-directory: ./backend
      run: npm ci

    - name: Wait for PostgreSQL
      run: |
        for i in {1..30}; do
          if pg_isready -h localhost -p 5432 -U hikari_user; then
            echo "PostgreSQL is ready!"
            break
          fi
          echo "Waiting for PostgreSQL... ($i/30)"
          sleep 2
        done

    - name: Run linting
      working-directory: ./backend
      run: npm run lint

    - name: Run unit tests
      working-directory: ./backend
      run: npm run test
      env:
        NODE_ENV: test
        DATABASE_HOST: localhost
        DATABASE_PORT: 5432
        DATABASE_USERNAME: hikari_user
        DATABASE_PASSWORD: hikari_password
        DATABASE_NAME: hikari_test
        JWT_SECRET: test-secret-key-for-github-actions
        JWT_EXPIRATION: 24h
        JWT_ISSUER: hikari-test
        JWT_AUDIENCE: hikari-test-users
        JWT_PRIVATE_KEY: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2Z0lCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktnd2dnU2tBZ0VBQW9JQkFRRHk4S255eFhEK0VwaE0KaEdVekg5RkdzbWYxNlJSK0NOVWxmM0tFQzI0NG4yUFoxaG9rbDR1Z3VDRWRKbnZmUy83VlFDSjNvdi9uRDdVSQpYN3R5NUNEcnhUdDV1YmZUajdWQ0JSekRIOWVla2ExeGI5RENTYkJSOFBDMVB6VUs2ZnVoVjY2MkJCa1lVTkZqCjlWK0pFdVNHUUh5NHREdzZkYUY3RXlLMWRyMXlKTjNLckJQZ2JnVzZVbjJHWnM2ODJ6UWp1VnpqbUJLaDVTcWwKUWRMMGVQaDYwUjZxRnd6U20ycU0rbnVUeTM4c0M2Y2l5ZFB2RTRSbC9yVVYzVkMwUjc1VHlMaTNDSDFMSDdkRAozKzUzWFE5UlE4S0tZTnV3cnZoOWNabXQ4ZmdGejJLMjdDbzZRSDFkMVFmcm51T0k0VU9SSTJZMkpQZGI2Y2ZoCm1aYmtQOVV6QWdNQkFBRUNnZ0VBYjFNQUZic0xPYW9zdHhlT1JqeWt5aWd6d25paHh0Vm1VdTRSZkZlK2xOeloKUlRlNnVCem53MmpNNTg0OFFrbFJSOGhCWXlCQzhzOThUZytNVnF3YU4rQWtEbllmdWljbTBNK0Y3Qlk1MkxSNQp6YnNHNXhrY1hwZ3h2V1J1K29iWkk0aUtDMmRhVm8ybVBnOXhUVjltYit5NkdtdWhFOHJXaWc3dFAwbGZxNTg3Cmp5eEFlODJ5UDhKVDFoeHFYYmU5MDUyOGptc3BmNWtneHZ6V2JRaXFUNWdBSGlOUGZXb0IwUkJtMWJDRG5MMG8KR3NuUlI5dEJlQWxGQzRRRi9vQThieWZkUU9nR1lVR2wvYkM2NHh4RG80L0dIU2RoZFFvNmtUa0V6amFzZ01uTQpTMWFWcVJLU2J4TTVlOUZPblpqaHA0eXJjcXhiK2xzSmpJUDhSRUF3a1FLQmdRRC8yOWtJTHdFdGkzZ2RueEQ0ClJnWjRTaGhDUjlVbFlzZ0o4eDZEL0ZPZWw4NVhiYWpyLzR3RUpyczk0YmM0RVpPckJZd2I3bGJMcGtoN2dCZ2EKSGh5dkpCcmtySWJ6VDFHTWhpR2UwV1NQbGdGQUJOZ1pRT3lRaitPMHArWk5QbnVjbkFwaE9MWERmd0NUUUF2dQpQYmg3c0gxb1BTbEdYbERBTjQxUnB1SGQ0d0tCZ1FEekV2MmVqeWEvZmhZbGszcVM0dEVqOERTaVMwSnlyUzMxCnplOVpUVTIvM3NuamxTeUQxRGd4QTgwa200ckNoR3A3eU15WmdFdTJEcFBPbXhvT2EyUVJFakROUzhNVnRXa20Kb2tFd2lBdG9mY0hUQTRNSTBaME1CTG9odE90UXNwRmJpRElIaXplYjUrMm5QOUNhVW50VlFERHhuUk10MUJBRgp5ZGJkK0JUTWNRS0JnQlhhMDVrTldzNW5JV1YyVnQ2K0xJTk40UENZYmk1NVY1angrV05ReEZ2Qm45QjcvM2ZaCkpqNmNpRlhxMTlta05yYmZERzYrVncraUxvTE9HRUR5M1lSZ1V5UEJVTzJya3Myc0QyY2ZmN1Y4SExNNU5yUkIKaFhON3R2bVJkZXlYTDd2YTRGQVpwZjBDOWl1ZHh1Y2N3b3RlTWZnYmNWRWZjVXBaOUdwTEZQUDlBb0dCQU5QYgpHWEc1RXV5VDJIbW5zSTJWWXZNUHlOQXJDQjhyRVlQTG1YRWNEMGZMeGVxMWViYnNvSTBYNHhTay9Ldk0vWUlsCjRTMW94SlJJNEVxU3BJTXMxbXFLa0Q1ZWFnbmhzMlFZeHZpbG1rdllUN2E2dU5wVzE2cEI5SGlzVnV4ZXRwSXcKZ21wUXpJYjEvZ3huY2trTzJxL1M0dFd6TWFRZjBGYzdOQ3NDcmg0QkFvR0JBSmdmUUxWalJjOC9tbit3SzFnVgpYeUYrK3ZLY3RMUmFSWFlidHdRWUJ0Y05aS01DcytHdHVwUlpDM2NiYnNBbHE3M0dBby9paUZxSUdtWDlBdEM0CnRwYi84VXd4clJrRVA2Q2lPeGIrSXBOWXRabUpnUXpWaGFWTlBvNVh4S1RxOVJ3UWoyYmEyWEtTY3ZOUm5vYkoKS25FWDJjekVGSzdEVTJVb2VwSUFNMU1UCi0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K
        JWT_PUBLIC_KEY: LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FROUE4dkNwOHNWdy9oS1lUSVJsTXgvUgpSckpuOWVrVWZnalZKWDl5aEF0dU9KOWoyZFlhSkplTG9MZ2hIU1o3MzB2KzFVQWlkNkwvNXcrMUNGKzdjdVFnCjY4VTdlYm0zMDQrMVFnVWN3eC9YbnBHdGNXL1F3a213VWZEd3RUODFDdW43b1ZldXRnUVpHRkRSWS9WZmlSTGsKaGtCOHVMUThPbldoZXhNaXRYYTljaVRkeXF3VDRHNEZ1bEo5aG1iT3ZOczBJN2xjNDVnU29lVXFwVUhTOUhqNApldEVlcWhjTTBwdHFqUHA3azh0L0xBdW5Jc25UN3hPRVpmNjFGZDFRdEVlK1U4aTR0d2g5U3grM1E5L3VkMTBQClVVUENpbURic0s3NGZYR1pyZkg0QmM5aXR1d3FPa0I5WGRVSDY1N2ppT0ZEa1NObU5pVDNXK25INFptVzVEL1YKTXdJREFRQUIKLS0tLS1FTkQgUFVCTElDIEtFWS0tLS0tCg==

    - name: Run e2e tests
      working-directory: ./backend
      run: npm run test:e2e
      env:
        NODE_ENV: test
        DATABASE_HOST: localhost
        DATABASE_PORT: 5432
        DATABASE_USERNAME: hikari_user
        DATABASE_PASSWORD: hikari_password
        DATABASE_NAME: hikari_test
        JWT_SECRET: test-secret-key-for-github-actions
        JWT_EXPIRATION: 24h
        JWT_ISSUER: hikari-test
        JWT_AUDIENCE: hikari-test-users
        JWT_PRIVATE_KEY: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2Z0lCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktnd2dnU2tBZ0VBQW9JQkFRRHk4S255eFhEK0VwaE0KaEdVekg5RkdzbWYxNlJSK0NOVWxmM0tFQzI0NG4yUFoxaG9rbDR1Z3VDRWRKbnZmUy83VlFDSjNvdi9uRDdVSQpYN3R5NUNEcnhUdDV1YmZUajdWQ0JSekRIOWVla2ExeGI5RENTYkJSOFBDMVB6VUs2ZnVoVjY2MkJCa1lVTkZqCjlWK0pFdVNHUUh5NHREdzZkYUY3RXlLMWRyMXlKTjNLckJQZ2JnVzZVbjJHWnM2ODJ6UWp1VnpqbUJLaDVTcWwKUWRMMGVQaDYwUjZxRnd6U20ycU0rbnVUeTM4c0M2Y2l5ZFB2RTRSbC9yVVYzVkMwUjc1VHlMaTNDSDFMSDdkRAozKzUzWFE5UlE4S0tZTnV3cnZoOWNabXQ4ZmdGejJLMjdDbzZRSDFkMVFmcm51T0k0VU9SSTJZMkpQZGI2Y2ZoCm1aYmtQOVV6QWdNQkFBRUNnZ0VBYjFNQUZic0xPYW9zdHhlT1JqeWt5aWd6d25paHh0Vm1VdTRSZkZlK2xOeloKUlRlNnVCem53MmpNNTg0OFFrbFJSOGhCWXlCQzhzOThUZytNVnF3YU4rQWtEbllmdWljbTBNK0Y3Qlk1MkxSNQp6YnNHNXhrY1hwZ3h2V1J1K29iWkk0aUtDMmRhVm8ybVBnOXhUVjltYit5NkdtdWhFOHJXaWc3dFAwbGZxNTg3Cmp5eEFlODJ5UDhKVDFoeHFYYmU5MDUyOGptc3BmNWtneHZ6V2JRaXFUNWdBSGlOUGZXb0IwUkJtMWJDRG5MMG8KR3NuUlI5dEJlQWxGQzRRRi9vQThieWZkUU9nR1lVR2wvYkM2NHh4RG80L0dIU2RoZFFvNmtUa0V6amFzZ01uTQpTMWFWcVJLU2J4TTVlOUZPblpqaHA0eXJjcXhiK2xzSmpJUDhSRUF3a1FLQmdRRC8yOWtJTHdFdGkzZ2RueEQ0ClJnWjRTaGhDUjlVbFlzZ0o4eDZEL0ZPZWw4NVhiYWpyLzR3RUpyczk0YmM0RVpPckJZd2I3bGJMcGtoN2dCZ2EKSGh5dkpCcmtySWJ6VDFHTWhpR2UwV1NQbGdGQUJOZ1pRT3lRaitPMHArWk5QbnVjbkFwaE9MWERmd0NUUUF2dQpQYmg3c0gxb1BTbEdYbERBTjQxUnB1SGQ0d0tCZ1FEekV2MmVqeWEvZmhZbGszcVM0dEVqOERTaVMwSnlyUzMxCnplOVpUVTIvM3NuamxTeUQxRGd4QTgwa200ckNoR3A3eU15WmdFdTJEcFBPbXhvT2EyUVJFakROUzhNVnRXa20Kb2tFd2lBdG9mY0hUQTRNSTBaME1CTG9odE90UXNwRmJpRElIaXplYjUrMm5QOUNhVW50VlFERHhuUk10MUJBRgp5ZGJkK0JUTWNRS0JnQlhhMDVrTldzNW5JV1YyVnQ2K0xJTk40UENZYmk1NVY1angrV05ReEZ2Qm45QjcvM2ZaCkpqNmNpRlhxMTlta05yYmZERzYrVncraUxvTE9HRUR5M1lSZ1V5UEJVTzJya3Myc0QyY2ZmN1Y4SExNNU5yUkIKaFhON3R2bVJkZXlYTDd2YTRGQVpwZjBDOWl1ZHh1Y2N3b3RlTWZnYmNWRWZjVXBaOUdwTEZQUDlBb0dCQU5QYgpHWEc1RXV5VDJIbW5zSTJWWXZNUHlOQXJDQjhyRVlQTG1YRWNEMGZMeGVxMWViYnNvSTBYNHhTay9Ldk0vWUlsCjRTMW94SlJJNEVxU3BJTXMxbXFLa0Q1ZWFnbmhzMlFZeHZpbG1rdllUN2E2dU5wVzE2cEI5SGlzVnV4ZXRwSXcKZ21wUXpJYjEvZ3huY2trTzJxL1M0dFd6TWFRZjBGYzdOQ3NDcmg0QkFvR0JBSmdmUUxWalJjOC9tbit3SzFnVgpYeUYrK3ZLY3RMUmFSWFlidHdRWUJ0Y05aS01DcytHdHVwUlpDM2NiYnNBbHE3M0dBby9paUZxSUdtWDlBdEM0CnRwYi84VXd4clJrRVA2Q2lPeGIrSXBOWXRabUpnUXpWaGFWTlBvNVh4S1RxOVJ3UWoyYmEyWEtTY3ZOUm5vYkoKS25FWDJjekVGSzdEVTJVb2VwSUFNMU1UCi0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K
        JWT_PUBLIC_KEY: LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FROUE4dkNwOHNWdy9oS1lUSVJsTXgvUgpSckpuOWVrVWZnalZKWDl5aEF0dU9KOWoyZFlhSkplTG9MZ2hIU1o3MzB2KzFVQWlkNkwvNXcrMUNGKzdjdVFnCjY4VTdlYm0zMDQrMVFnVWN3eC9YbnBHdGNXL1F3a213VWZEd3RUODFDdW43b1ZldXRnUVpHRkRSWS9WZmlSTGsKaGtCOHVMUThPbldoZXhNaXRYYTljaVRkeXF3VDRHNEZ1bEo5aG1iT3ZOczBJN2xjNDVnU29lVXFwVUhTOUhqNApldEVlcWhjTTBwdHFqUHA3azh0L0xBdW5Jc25UN3hPRVpmNjFGZDFRdEVlK1U4aTR0d2g5U3grM1E5L3VkMTBQClVVUENpbURic0s3NGZYR1pyZkg0QmM5aXR1d3FPa0I5WGRVSDY1N2ppT0ZEa1NObU5pVDNXK25INFptVzVEL1YKTXdJREFRQUIKLS0tLS1FTkQgUFVCTElDIEtFWS0tLS0tCg==

    - name: Generate test coverage
      working-directory: ./backend
      run: npm run test:cov
      env:
        NODE_ENV: test
        DATABASE_HOST: localhost
        DATABASE_PORT: 5432
        DATABASE_USERNAME: hikari_user
        DATABASE_PASSWORD: hikari_password
        DATABASE_NAME: hikari_test
        JWT_SECRET: test-secret-key-for-github-actions
        JWT_EXPIRATION: 24h
        JWT_ISSUER: hikari-test
        JWT_AUDIENCE: hikari-test-users
        JWT_PRIVATE_KEY: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2Z0lCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktnd2dnU2tBZ0VBQW9JQkFRRHk4S255eFhEK0VwaE0KaEdVekg5RkdzbWYxNlJSK0NOVWxmM0tFQzI0NG4yUFoxaG9rbDR1Z3VDRWRKbnZmUy83VlFDSjNvdi9uRDdVSQpYN3R5NUNEcnhUdDV1YmZUajdWQ0JSekRIOWVla2ExeGI5RENTYkJSOFBDMVB6VUs2ZnVoVjY2MkJCa1lVTkZqCjlWK0pFdVNHUUh5NHREdzZkYUY3RXlLMWRyMXlKTjNLckJQZ2JnVzZVbjJHWnM2ODJ6UWp1VnpqbUJLaDVTcWwKUWRMMGVQaDYwUjZxRnd6U20ycU0rbnVUeTM4c0M2Y2l5ZFB2RTRSbC9yVVYzVkMwUjc1VHlMaTNDSDFMSDdkRAozKzUzWFE5UlE4S0tZTnV3cnZoOWNabXQ4ZmdGejJLMjdDbzZRSDFkMVFmcm51T0k0VU9SSTJZMkpQZGI2Y2ZoCm1aYmtQOVV6QWdNQkFBRUNnZ0VBYjFNQUZic0xPYW9zdHhlT1JqeWt5aWd6d25paHh0Vm1VdTRSZkZlK2xOeloKUlRlNnVCem53MmpNNTg0OFFrbFJSOGhCWXlCQzhzOThUZytNVnF3YU4rQWtEbllmdWljbTBNK0Y3Qlk1MkxSNQp6YnNHNXhrY1hwZ3h2V1J1K29iWkk0aUtDMmRhVm8ybVBnOXhUVjltYit5NkdtdWhFOHJXaWc3dFAwbGZxNTg3Cmp5eEFlODJ5UDhKVDFoeHFYYmU5MDUyOGptc3BmNWtneHZ6V2JRaXFUNWdBSGlOUGZXb0IwUkJtMWJDRG5MMG8KR3NuUlI5dEJlQWxGQzRRRi9vQThieWZkUU9nR1lVR2wvYkM2NHh4RG80L0dIU2RoZFFvNmtUa0V6amFzZ01uTQpTMWFWcVJLU2J4TTVlOUZPblpqaHA0eXJjcXhiK2xzSmpJUDhSRUF3a1FLQmdRRC8yOWtJTHdFdGkzZ2RueEQ0ClJnWjRTaGhDUjlVbFlzZ0o4eDZEL0ZPZWw4NVhiYWpyLzR3RUpyczk0YmM0RVpPckJZd2I3bGJMcGtoN2dCZ2EKSGh5dkpCcmtySWJ6VDFHTWhpR2UwV1NQbGdGQUJOZ1pRT3lRaitPMHArWk5QbnVjbkFwaE9MWERmd0NUUUF2dQpQYmg3c0gxb1BTbEdYbERBTjQxUnB1SGQ0d0tCZ1FEekV2MmVqeWEvZmhZbGszcVM0dEVqOERTaVMwSnlyUzMxCnplOVpUVTIvM3NuamxTeUQxRGd4QTgwa200ckNoR3A3eU15WmdFdTJEcFBPbXhvT2EyUVJFakROUzhNVnRXa20Kb2tFd2lBdG9mY0hUQTRNSTBaME1CTG9odE90UXNwRmJpRElIaXplYjUrMm5QOUNhVW50VlFERHhuUk10MUJBRgp5ZGJkK0JUTWNRS0JnQlhhMDVrTldzNW5JV1YyVnQ2K0xJTk40UENZYmk1NVY1angrV05ReEZ2Qm45QjcvM2ZaCkpqNmNpRlhxMTlta05yYmZERzYrVncraUxvTE9HRUR5M1lSZ1V5UEJVTzJya3Myc0QyY2ZmN1Y4SExNNU5yUkIKaFhON3R2bVJkZXlYTDd2YTRGQVpwZjBDOWl1ZHh1Y2N3b3RlTWZnYmNWRWZjVXBaOUdwTEZQUDlBb0dCQU5QYgpHWEc1RXV5VDJIbW5zSTJWWXZNUHlOQXJDQjhyRVlQTG1YRWNEMGZMeGVxMWViYnNvSTBYNHhTay9Ldk0vWUlsCjRTMW94SlJJNEVxU3BJTXMxbXFLa0Q1ZWFnbmhzMlFZeHZpbG1rdllUN2E2dU5wVzE2cEI5SGlzVnV4ZXRwSXcKZ21wUXpJYjEvZ3huY2trTzJxL1M0dFd6TWFRZjBGYzdOQ3NDcmg0QkFvR0JBSmdmUUxWalJjOC9tbit3SzFnVgpYeUYrK3ZLY3RMUmFSWFlidHdRWUJ0Y05aS01DcytHdHVwUlpDM2NiYnNBbHE3M0dBby9paUZxSUdtWDlBdEM0CnRwYi84VXd4clJrRVA2Q2lPeGIrSXBOWXRabUpnUXpWaGFWTlBvNVh4S1RxOVJ3UWoyYmEyWEtTY3ZOUm5vYkoKS25FWDJjekVGSzdEVTJVb2VwSUFNMU1UCi0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K
        JWT_PUBLIC_KEY: LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FROUE4dkNwOHNWdy9oS1lUSVJsTXgvUgpSckpuOWVrVWZnalZKWDl5aEF0dU9KOWoyZFlhSkplTG9MZ2hIU1o3MzB2KzFVQWlkNkwvNXcrMUNGKzdjdVFnCjY4VTdlYm0zMDQrMVFnVWN3eC9YbnBHdGNXL1F3a213VWZEd3RUODFDdW43b1ZldXRnUVpHRkRSWS9WZmlSTGsKaGtCOHVMUThPbldoZXhNaXRYYTljaVRkeXF3VDRHNEZ1bEo5aG1iT3ZOczBJN2xjNDVnU29lVXFwVUhTOUhqNApldEVlcWhjTTBwdHFqUHA3azh0L0xBdW5Jc25UN3hPRVpmNjFGZDFRdEVlK1U4aTR0d2g5U3grM1E5L3VkMTBQClVVUENpbURic0s3NGZYR1pyZkg0QmM5aXR1d3FPa0I5WGRVSDY1N2ppT0ZEa1NObU5pVDNXK25INFptVzVEL1YKTXdJREFRQUIKLS0tLS1FTkQgUFVCTElDIEtFWS0tLS0tCg==

    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        file: ./backend/coverage/lcov.info
        flags: backend
        name: backend-coverage

  build:
    name: Build Application
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: |
          backend/package-lock.json
          frontend/package-lock.json

    - name: Install backend dependencies
      working-directory: ./backend
      run: npm ci

    - name: Build backend
      working-directory: ./backend
      run: npm run build

    - name: Install frontend dependencies
      working-directory: ./frontend
      run: npm ci

    - name: Lint frontend
      working-directory: ./frontend
      run: npm run lint

    - name: Type-check frontend
      working-directory: ./frontend
      run: npm run type-check

    - name: Build frontend
      working-directory: ./frontend
      run: npm run build

    - name: Upload backend build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: backend-dist
        path: backend/dist
        retention-days: 7

    - name: Upload frontend build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: frontend-next-artifacts
        path: frontend/.next
        retention-days: 7

  docker:
    name: Build and Test Docker Images
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build backend Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./backend
        file: ./backend/Dockerfile
        push: false
        tags: hikari-backend:test
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Build frontend Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./frontend
        file: ./frontend/Dockerfile
        push: false
        tags: hikari-frontend:test
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Test Docker Compose configuration
      run: |
        echo "Testing docker-compose configuration..."
        docker compose config --quiet

    - name: Run Docker container test
      run: |
        echo "Testing backend Docker image..."
        docker build -t hikari-backend:test ./backend
        echo "Backend Docker image built successfully"

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: |
          backend/package-lock.json
          frontend/package-lock.json

    - name: Install dependencies
      working-directory: ./backend
      run: npm ci

    - name: Run security audit
      working-directory: ./backend
      run: npm audit --audit-level=moderate
      continue-on-error: true

    - name: Run Snyk security scan
      uses: snyk/actions/node@master
      continue-on-error: true
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        args: --severity-threshold=high --file=backend/package.json
        command: test

  deploy-staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    needs: [test, build, docker]
    if: github.ref == 'refs/heads/develop' && github.event_name == 'push'
    environment: staging

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Deploy to staging
      run: |
        echo "Deploying to staging environment..."
        echo "Branch: ${{ github.ref }}"
        echo "Commit: ${{ github.sha }}"
        echo "This would typically deploy to your staging server"

  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: [test, build, docker, security]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    environment: production

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Deploy to production
      run: |
        echo "Deploying to production environment..."
        echo "Branch: ${{ github.ref }}"
        echo "Commit: ${{ github.sha }}"
        echo "This would typically deploy to your production server"
