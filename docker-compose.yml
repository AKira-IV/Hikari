version: '3.8'

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - DATABASE_HOST=db
      - DATABASE_PORT=5432
      - DATABASE_USERNAME=hikari_user
      - DATABASE_PASSWORD=hikari_password
      - DATABASE_NAME=hikari
      - JWT_SECRET=production-super-secret-jwt-key-change-in-production
      - JWT_EXPIRATION=24h
      - PORT=3000
      - RECAPTCHA_ENABLED=${RECAPTCHA_ENABLED:-false}
      - RECAPTCHA_SECRET=${RECAPTCHA_SECRET:-}
      - RECAPTCHA_MIN_SCORE=${RECAPTCHA_MIN_SCORE:-0.5}
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./backend/src:/usr/src/app/src
    command: ["npm", "run", "start:dev"]

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3001:3000"
    depends_on:
      - backend
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_BASE_URL=${NEXT_PUBLIC_API_BASE_URL:-http://localhost:3000}
      - NEXT_PUBLIC_RECAPTCHA_SITE_KEY=${NEXT_PUBLIC_RECAPTCHA_SITE_KEY:-}

  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: hikari_user
      POSTGRES_PASSWORD: hikari_password
      POSTGRES_DB: hikari
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256 --auth-local=scram-sha-256"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U hikari_user -d hikari"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

volumes:
  postgres_data:
